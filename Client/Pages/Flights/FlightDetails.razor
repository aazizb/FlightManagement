@page "/flight"
@page "/flight/{id:int}"
@inject IFlightService FlightService

@if (Id is null)
{
    <PageTitle>Create a new flight</PageTitle>
    <h3>Create a new flight</h3>
}
else
{
    <PageTitle>Edit @flight.Name</PageTitle>
    <h3>Edit @flight.Name</h3>
}

<EditForm Model="flight" OnSubmit="HandleSubmit">
    <div>
        <label for="name">Flight Name</label>
        <InputText id="name" @bind-Value="flight.Name" class="form-control"></InputText>
    </div>
    <div>
        <label>Departure</label><br />
        <InputSelect @bind-Value="flight.DepartureId" class="form-select">
            @foreach (var airport in FlightService.Airports)
            {
                <option value="@airport.Id">@airport.Name</option>
            }
        </InputSelect>
    </div>
    <div>
        <label>Destination</label><br />
        <InputSelect @bind-Value="flight.DestinationId" class="form-select">
            @foreach (var airport in FlightService.Airports)
            {
                <option value="@airport.Id">@airport.Name</option>
            }
        </InputSelect>
    </div>
    <br />
    <button type="submit" class="btn btn-primary">@btnText</button>
    <button type="button" class="btn btn-danger" @onclick="DeleteFlight">Delete Flight</button>
</EditForm>

@code {
    [Parameter]
    public int? Id { get; set; }

    string btnText = string.Empty;

    Flight flight = new Flight
        {
            Departure = new Airport(),
            Destination = new Airport()
        };

    protected override async Task OnInitializedAsync()
    {
        btnText = Id is null ? "Save New Flight" : "Update Flight";
        await FlightService.GetAirports();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id is null)
        {
            flight.Departure = FlightService.Airports[0];
            flight.DepartureId = flight.Departure.Id;
            flight.Destination = FlightService.Airports[0];
            flight.DestinationId = flight.Destination.Id;
        }
        else
        {
            flight = await FlightService.GetFlightBy((int)Id);
        }
    }

    async Task HandleSubmit()
    {
        Airport? departure = FlightService.Airports.SingleOrDefault(o => o.Id.Equals(flight.DepartureId));
        Airport? destination = FlightService.Airports.SingleOrDefault(o => o.Id.Equals(flight.DestinationId));
        flight.Departure = departure;
        flight.Destination = destination;
        if (Id is null)
        {
            await FlightService.CreateFlight(flight);
        }
        else
        {
            await FlightService.UpdateFlight((int)Id, flight);
        }
    }

    async Task DeleteFlight()
    {
        await FlightService.DeleteFlight(flight.Id);
    }
}
